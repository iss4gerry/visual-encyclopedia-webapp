<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link
      rel="stylesheet"
      href="https://unpkg.com/papercss@1.9.2/dist/paper.min.css"
    />
    <title>VueJS Basic</title>
  </head>
  <body> 
    <div id="app">
        <body class="paper container">
            <h1 class="text-center margin-top">Visual Encyclopedia</h1>
            <form-section @information-result="changeInformationResult"></form-section>
            <result-section :information="information" :history="history" v-if="information"></result-section>
        </body>    
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    
    <script>

        Vue.component('form-section', {
            template: `
            <div class="paper col">
            <h2 id="uploadImg" class="margin-small">upload an image</h2>
            <form enctype="multipart/form-data">
            <div class="form-group">
                <input type="file" accept="image/*" @change="onFileChange">
            </div>
            <div id="imagePreviewContainer" class="margin-bottom" v-if="imageFile">
                <img id="imagePreview" 
                :src="imageUrl" 
                alt="Image Preview" 
                style="width: auto; height: 300px; object-fit: cover;">
            </div>
            <button @click.stop="analyzeImage">Analyze</button>
            </form>
    </div>
            `,
            data: function () {
                return {
                    imageFile: null,
                    imageUrl: null,
                    information: null,
                    history: null
                }
            },
            methods: {
                onFileChange(e) {
                    const file = e.target.files[0]
                    if(file) {
                        this.imageFile = file
                        this.imageUrl = URL.createObjectURL(file)
                    }else {
                        this.imageFile = null
                        this.imageUrl = null
                    }
                },
                fileToBase64(file) {
                    return new Promise((resolve, reject) => {
                    const reader = new FileReader()
                    reader.onloadend = () => resolve(reader.result.split(',')[1])
                    reader.onerror = reject
                    reader.readAsDataURL(file)
                })
                },
                async analyzeImage(event) {
                    event.preventDefault()
                    const imageBase64 = await this.fileToBase64(this.imageFile) 
                    const data = {
                        base64Image: imageBase64
                    }
                    const response = await fetch('/analyze', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data) 
                    })

                    const responseData = await response.json()
                    const result = responseData.data
                    this.information = result.information
                    this.history = result.history
                    this.$emit('information-result', this.information, this.history)
                }
            }
        }
    )

        Vue.component('result-section', {
            props: ['information', 'history'],
            template: `
            <div class="paper col">
            <h2 class="text-center margin-small">Result</h2>
            <div class="row flex-spaces tabs">
                <input id="tab1" type="radio" name="tabs" checked>
                <label for="tab1">Information</label>

                <input id="tab2" type="radio" name="tabs">
                <label for="tab2">History</label>
                <div class="content" id="content1">
                <p>
                    {{ information }}
                </p>
            </div>
            <div class="content" id="content2">
                <p>
                    {{ history }}
                </p>
            </div>
            </div>
            </div>
            `,
        })

        var app = new Vue({
            el:'#app',
            data: {
                information: '',
                history: ''
            },
            methods: {
                changeInformationResult(information, history) {
                    this.information = information
                    this.history = history
                }
            }
        })
    </script>
  </body>
</html>
